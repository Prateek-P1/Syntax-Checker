
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DIVIDE ELSE EQ EQUALS FLOAT FOR GE GT ID IF INT LBRACE LE LPAREN LT MINUS NE NUMBER PLUS PRINT RBRACE RPAREN SEMICOLON TIMES WHILEprogram : statement\n               | program statementstatement : declaration\n                | assignment\n                | if_statement\n                | while_statement\n                | for_statement\n                | print_statementdeclaration : type declaration_list SEMICOLONdeclaration_list : ID\n                       | ID COMMA declaration_listtype : INT\n            | FLOATassignment : ID EQUALS expression SEMICOLONif_statement : IF LPAREN condition RPAREN LBRACE program RBRACE\n                   | IF LPAREN condition RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACEwhile_statement : WHILE LPAREN condition RPAREN LBRACE program RBRACEfor_statement : FOR LPAREN assignment condition SEMICOLON ID EQUALS expression RPAREN LBRACE program RBRACEprint_statement : PRINT LPAREN print_list RPAREN SEMICOLONprint_list : expression\n                 | expression COMMA print_listcondition : expression GT expression\n                | expression LT expression\n                | expression GE expression\n                | expression LE expression\n                | expression EQ expression\n                | expression NE expressionexpression : term\n                 | expression PLUS term\n                 | expression MINUS termterm : factor\n            | term TIMES factor\n            | term DIVIDE factorfactor : NUMBER\n              | ID\n              | LPAREN expression RPAREN'
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,15,16,17,20,21,22,23,24,25,26,32,36,40,41,42,43,44,47,48,49,50,51,52,56,62,69,70,71,73,74,76,77,78,81,83,84,85,86,87,],[10,10,-1,-3,-4,-5,-6,-7,-8,19,-12,-13,-2,27,27,27,10,27,-9,19,27,27,-14,27,27,27,27,27,27,27,27,27,27,27,10,10,75,-19,10,10,-15,-17,27,10,10,10,-16,10,-18,]),'IF':([0,1,2,3,4,5,6,7,8,17,25,40,62,69,71,73,74,76,77,81,83,84,85,86,87,],[11,11,-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,11,11,-19,11,11,-15,-17,11,11,11,-16,11,-18,]),'WHILE':([0,1,2,3,4,5,6,7,8,17,25,40,62,69,71,73,74,76,77,81,83,84,85,86,87,],[12,12,-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,12,12,-19,12,12,-15,-17,12,12,12,-16,12,-18,]),'FOR':([0,1,2,3,4,5,6,7,8,17,25,40,62,69,71,73,74,76,77,81,83,84,85,86,87,],[13,13,-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,13,13,-19,13,13,-15,-17,13,13,13,-16,13,-18,]),'PRINT':([0,1,2,3,4,5,6,7,8,17,25,40,62,69,71,73,74,76,77,81,83,84,85,86,87,],[14,14,-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,14,14,-19,14,14,-15,-17,14,14,14,-16,14,-18,]),'INT':([0,1,2,3,4,5,6,7,8,17,25,40,62,69,71,73,74,76,77,81,83,84,85,86,87,],[15,15,-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,15,15,-19,15,15,-15,-17,15,15,15,-16,15,-18,]),'FLOAT':([0,1,2,3,4,5,6,7,8,17,25,40,62,69,71,73,74,76,77,81,83,84,85,86,87,],[16,16,-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,16,16,-19,16,16,-15,-17,16,16,16,-16,16,-18,]),'$end':([1,2,3,4,5,6,7,8,17,25,40,71,76,77,85,87,],[0,-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,-19,-15,-17,-16,-18,]),'RBRACE':([2,3,4,5,6,7,8,17,25,40,71,73,74,76,77,83,85,86,87,],[-1,-3,-4,-5,-6,-7,-8,-2,-9,-14,-19,76,77,-15,-17,85,-16,87,-18,]),'EQUALS':([10,75,],[20,78,]),'LPAREN':([11,12,13,14,20,21,22,24,32,36,40,41,42,43,44,47,48,49,50,51,52,56,78,],[21,22,23,24,32,32,32,32,32,32,-14,32,32,32,32,32,32,32,32,32,32,32,32,]),'SEMICOLON':([18,19,27,28,29,30,31,39,54,55,57,58,59,60,61,63,64,65,66,67,68,],[25,-10,-35,40,-28,-31,-34,-11,70,71,-29,-30,-32,-33,-36,-22,-23,-24,-25,-26,-27,]),'COMMA':([19,27,29,30,31,38,57,58,59,60,61,],[26,-35,-28,-31,-34,56,-29,-30,-32,-33,-36,]),'NUMBER':([20,21,22,24,32,36,40,41,42,43,44,47,48,49,50,51,52,56,78,],[31,31,31,31,31,31,-14,31,31,31,31,31,31,31,31,31,31,31,31,]),'TIMES':([27,29,30,31,57,58,59,60,61,],[-35,43,-31,-34,43,43,-32,-33,-36,]),'DIVIDE':([27,29,30,31,57,58,59,60,61,],[-35,44,-31,-34,44,44,-32,-33,-36,]),'PLUS':([27,28,29,30,31,34,38,45,57,58,59,60,61,63,64,65,66,67,68,80,],[-35,41,-28,-31,-34,41,41,41,-29,-30,-32,-33,-36,41,41,41,41,41,41,41,]),'MINUS':([27,28,29,30,31,34,38,45,57,58,59,60,61,63,64,65,66,67,68,80,],[-35,42,-28,-31,-34,42,42,42,-29,-30,-32,-33,-36,42,42,42,42,42,42,42,]),'GT':([27,29,30,31,34,57,58,59,60,61,],[-35,-28,-31,-34,47,-29,-30,-32,-33,-36,]),'LT':([27,29,30,31,34,57,58,59,60,61,],[-35,-28,-31,-34,48,-29,-30,-32,-33,-36,]),'GE':([27,29,30,31,34,57,58,59,60,61,],[-35,-28,-31,-34,49,-29,-30,-32,-33,-36,]),'LE':([27,29,30,31,34,57,58,59,60,61,],[-35,-28,-31,-34,50,-29,-30,-32,-33,-36,]),'EQ':([27,29,30,31,34,57,58,59,60,61,],[-35,-28,-31,-34,51,-29,-30,-32,-33,-36,]),'NE':([27,29,30,31,34,57,58,59,60,61,],[-35,-28,-31,-34,52,-29,-30,-32,-33,-36,]),'RPAREN':([27,29,30,31,33,35,37,38,45,57,58,59,60,61,63,64,65,66,67,68,72,80,],[-35,-28,-31,-34,46,53,55,-20,61,-29,-30,-32,-33,-36,-22,-23,-24,-25,-26,-27,-21,82,]),'LBRACE':([46,53,79,82,],[62,69,81,84,]),'ELSE':([76,],[79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,62,69,81,84,],[1,73,74,83,86,]),'statement':([0,1,62,69,73,74,81,83,84,86,],[2,17,2,2,17,17,2,17,2,17,]),'declaration':([0,1,62,69,73,74,81,83,84,86,],[3,3,3,3,3,3,3,3,3,3,]),'assignment':([0,1,23,62,69,73,74,81,83,84,86,],[4,4,36,4,4,4,4,4,4,4,4,]),'if_statement':([0,1,62,69,73,74,81,83,84,86,],[5,5,5,5,5,5,5,5,5,5,]),'while_statement':([0,1,62,69,73,74,81,83,84,86,],[6,6,6,6,6,6,6,6,6,6,]),'for_statement':([0,1,62,69,73,74,81,83,84,86,],[7,7,7,7,7,7,7,7,7,7,]),'print_statement':([0,1,62,69,73,74,81,83,84,86,],[8,8,8,8,8,8,8,8,8,8,]),'type':([0,1,62,69,73,74,81,83,84,86,],[9,9,9,9,9,9,9,9,9,9,]),'declaration_list':([9,26,],[18,39,]),'expression':([20,21,22,24,32,36,47,48,49,50,51,52,56,78,],[28,34,34,38,45,34,63,64,65,66,67,68,38,80,]),'term':([20,21,22,24,32,36,41,42,47,48,49,50,51,52,56,78,],[29,29,29,29,29,29,57,58,29,29,29,29,29,29,29,29,]),'factor':([20,21,22,24,32,36,41,42,43,44,47,48,49,50,51,52,56,78,],[30,30,30,30,30,30,30,30,59,60,30,30,30,30,30,30,30,30,]),'condition':([21,22,36,],[33,35,54,]),'print_list':([24,56,],[37,72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser_rules.py',9),
  ('program -> program statement','program',2,'p_program','parser_rules.py',10),
  ('statement -> declaration','statement',1,'p_statement','parser_rules.py',14),
  ('statement -> assignment','statement',1,'p_statement','parser_rules.py',15),
  ('statement -> if_statement','statement',1,'p_statement','parser_rules.py',16),
  ('statement -> while_statement','statement',1,'p_statement','parser_rules.py',17),
  ('statement -> for_statement','statement',1,'p_statement','parser_rules.py',18),
  ('statement -> print_statement','statement',1,'p_statement','parser_rules.py',19),
  ('declaration -> type declaration_list SEMICOLON','declaration',3,'p_declaration','parser_rules.py',23),
  ('declaration_list -> ID','declaration_list',1,'p_declaration_list','parser_rules.py',27),
  ('declaration_list -> ID COMMA declaration_list','declaration_list',3,'p_declaration_list','parser_rules.py',28),
  ('type -> INT','type',1,'p_type','parser_rules.py',35),
  ('type -> FLOAT','type',1,'p_type','parser_rules.py',36),
  ('assignment -> ID EQUALS expression SEMICOLON','assignment',4,'p_assignment','parser_rules.py',40),
  ('if_statement -> IF LPAREN condition RPAREN LBRACE program RBRACE','if_statement',7,'p_if_statement','parser_rules.py',46),
  ('if_statement -> IF LPAREN condition RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','if_statement',11,'p_if_statement','parser_rules.py',47),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACE program RBRACE','while_statement',7,'p_while_statement','parser_rules.py',51),
  ('for_statement -> FOR LPAREN assignment condition SEMICOLON ID EQUALS expression RPAREN LBRACE program RBRACE','for_statement',12,'p_for_statement','parser_rules.py',55),
  ('print_statement -> PRINT LPAREN print_list RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_rules.py',59),
  ('print_list -> expression','print_list',1,'p_print_list','parser_rules.py',63),
  ('print_list -> expression COMMA print_list','print_list',3,'p_print_list','parser_rules.py',64),
  ('condition -> expression GT expression','condition',3,'p_condition','parser_rules.py',68),
  ('condition -> expression LT expression','condition',3,'p_condition','parser_rules.py',69),
  ('condition -> expression GE expression','condition',3,'p_condition','parser_rules.py',70),
  ('condition -> expression LE expression','condition',3,'p_condition','parser_rules.py',71),
  ('condition -> expression EQ expression','condition',3,'p_condition','parser_rules.py',72),
  ('condition -> expression NE expression','condition',3,'p_condition','parser_rules.py',73),
  ('expression -> term','expression',1,'p_expression','parser_rules.py',77),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser_rules.py',78),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser_rules.py',79),
  ('term -> factor','term',1,'p_term','parser_rules.py',89),
  ('term -> term TIMES factor','term',3,'p_term','parser_rules.py',90),
  ('term -> term DIVIDE factor','term',3,'p_term','parser_rules.py',91),
  ('factor -> NUMBER','factor',1,'p_factor','parser_rules.py',105),
  ('factor -> ID','factor',1,'p_factor','parser_rules.py',106),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser_rules.py',107),
]
